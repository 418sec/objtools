"use strict";

var spawn = require("child_process").spawn;

describe("Linter", function () {

	it("should not have any linter problems", function (done) {

		this.timeout(60000);

		var finished = false;

		function finish(error) {
			if (finished) return;
			finished = true;
			if (error && typeof error === "number") {
				throw new Error("Project contains linter errors (exit code " + error + ")");
			} else if (error instanceof Error) {
				throw error;
			} else if (error) {
				throw new Error("" + error);
			}
			done();
		}

		var lintProc = spawn("node", [__dirname + "/../../node_modules/.bin/eslint", "."], {
			cwd: __dirname + "/../.."
		});

		lintProc.on("error", function (error) {
			finish(error);
		});

		lintProc.on("exit", function (code, signal) {
			if (code !== null) {
				finish(code || null);
			} else if (signal !== null) {
				finish("Unexpected linter exit: " + signal);
			} else {
				finish("Unexpected linter exit");
			}
		});
	});
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvbGludC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLElBQUksS0FBSyxHQUFHLE9BQU8sQ0FBQyxlQUFlLENBQUMsQ0FBQyxLQUFLLENBQUM7O0FBRTNDLFFBQVEsQ0FBQyxRQUFRLEVBQUUsWUFBVzs7QUFFN0IsR0FBRSxDQUFDLHFDQUFxQyxFQUFFLFVBQVMsSUFBSSxFQUFFOztBQUV4RCxNQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDOztBQUVwQixNQUFJLFFBQVEsR0FBRyxLQUFLLENBQUM7O0FBRXJCLFdBQVMsTUFBTSxDQUFDLEtBQUssRUFBRTtBQUN0QixPQUFJLFFBQVEsRUFBRSxPQUFPO0FBQ3JCLFdBQVEsR0FBRyxJQUFJLENBQUM7QUFDaEIsT0FBSSxLQUFLLElBQUksT0FBTyxLQUFLLEtBQUssUUFBUSxFQUFFO0FBQ3ZDLFVBQU0sSUFBSSxLQUFLLENBQUMsNENBQTRDLEdBQUcsS0FBSyxHQUFHLEdBQUcsQ0FBQyxDQUFDO0lBQzVFLE1BQU0sSUFBSSxLQUFLLFlBQVksS0FBSyxFQUFFO0FBQ2xDLFVBQU0sS0FBSyxDQUFDO0lBQ1osTUFBTSxJQUFJLEtBQUssRUFBRTtBQUNqQixVQUFNLElBQUksS0FBSyxDQUFDLEVBQUUsR0FBRyxLQUFLLENBQUMsQ0FBQztJQUM1QjtBQUNELE9BQUksRUFBRSxDQUFDO0dBQ1A7O0FBRUQsTUFBSSxRQUFRLEdBQUcsS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUFFLFNBQVMsR0FBRyxpQ0FBaUMsRUFBRSxHQUFHLENBQUUsRUFBRTtBQUNwRixNQUFHLEVBQUUsU0FBUyxHQUFHLFFBQVE7R0FDekIsQ0FBQyxDQUFDOztBQUVILFVBQVEsQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLFVBQVMsS0FBSyxFQUFFO0FBQ3BDLFNBQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztHQUNkLENBQUMsQ0FBQzs7QUFFSCxVQUFRLENBQUMsRUFBRSxDQUFDLE1BQU0sRUFBRSxVQUFTLElBQUksRUFBRSxNQUFNLEVBQUU7QUFDMUMsT0FBSSxJQUFJLEtBQUssSUFBSSxFQUFFO0FBQ2xCLFVBQU0sQ0FBQyxJQUFJLElBQUksSUFBSSxDQUFDLENBQUM7SUFDckIsTUFBTSxJQUFJLE1BQU0sS0FBSyxJQUFJLEVBQUU7QUFDM0IsVUFBTSxDQUFDLDBCQUEwQixHQUFHLE1BQU0sQ0FBQyxDQUFDO0lBQzVDLE1BQU07QUFDTixVQUFNLENBQUMsd0JBQXdCLENBQUMsQ0FBQztJQUNqQztHQUNELENBQUMsQ0FBQztFQUVILENBQUMsQ0FBQztDQUVILENBQUMsQ0FBQyIsImZpbGUiOiJ0ZXN0L2xpbnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgc3Bhd24gPSByZXF1aXJlKCdjaGlsZF9wcm9jZXNzJykuc3Bhd247XG5cbmRlc2NyaWJlKCdMaW50ZXInLCBmdW5jdGlvbigpIHtcblxuXHRpdCgnc2hvdWxkIG5vdCBoYXZlIGFueSBsaW50ZXIgcHJvYmxlbXMnLCBmdW5jdGlvbihkb25lKSB7XG5cblx0XHR0aGlzLnRpbWVvdXQoNjAwMDApO1xuXG5cdFx0bGV0IGZpbmlzaGVkID0gZmFsc2U7XG5cblx0XHRmdW5jdGlvbiBmaW5pc2goZXJyb3IpIHtcblx0XHRcdGlmIChmaW5pc2hlZCkgcmV0dXJuO1xuXHRcdFx0ZmluaXNoZWQgPSB0cnVlO1xuXHRcdFx0aWYgKGVycm9yICYmIHR5cGVvZiBlcnJvciA9PT0gJ251bWJlcicpIHtcblx0XHRcdFx0dGhyb3cgbmV3IEVycm9yKCdQcm9qZWN0IGNvbnRhaW5zIGxpbnRlciBlcnJvcnMgKGV4aXQgY29kZSAnICsgZXJyb3IgKyAnKScpO1xuXHRcdFx0fSBlbHNlIGlmIChlcnJvciBpbnN0YW5jZW9mIEVycm9yKSB7XG5cdFx0XHRcdHRocm93IGVycm9yO1xuXHRcdFx0fSBlbHNlIGlmIChlcnJvcikge1xuXHRcdFx0XHR0aHJvdyBuZXcgRXJyb3IoJycgKyBlcnJvcik7XG5cdFx0XHR9XG5cdFx0XHRkb25lKCk7XG5cdFx0fVxuXG5cdFx0bGV0IGxpbnRQcm9jID0gc3Bhd24oJ25vZGUnLCBbIF9fZGlybmFtZSArICcvLi4vLi4vbm9kZV9tb2R1bGVzLy5iaW4vZXNsaW50JywgJy4nIF0sIHtcblx0XHRcdGN3ZDogX19kaXJuYW1lICsgJy8uLi8uLidcblx0XHR9KTtcblxuXHRcdGxpbnRQcm9jLm9uKCdlcnJvcicsIGZ1bmN0aW9uKGVycm9yKSB7XG5cdFx0XHRmaW5pc2goZXJyb3IpO1xuXHRcdH0pO1xuXG5cdFx0bGludFByb2Mub24oJ2V4aXQnLCBmdW5jdGlvbihjb2RlLCBzaWduYWwpIHtcblx0XHRcdGlmIChjb2RlICE9PSBudWxsKSB7XG5cdFx0XHRcdGZpbmlzaChjb2RlIHx8IG51bGwpO1xuXHRcdFx0fSBlbHNlIGlmIChzaWduYWwgIT09IG51bGwpIHtcblx0XHRcdFx0ZmluaXNoKCdVbmV4cGVjdGVkIGxpbnRlciBleGl0OiAnICsgc2lnbmFsKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGZpbmlzaCgnVW5leHBlY3RlZCBsaW50ZXIgZXhpdCcpO1xuXHRcdFx0fVxuXHRcdH0pO1xuXG5cdH0pO1xuXG59KTtcbiJdfQ==